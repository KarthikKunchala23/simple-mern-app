name: Deploy MERN Stack to EC2

on:
  push:
    branches:
      - master  # Trigger the pipeline when code is pushed to the main branch
  pull_request:
    branches:
      - master  # Trigger the pipeline on PRs to the main branch

jobs:
  # Frontend job to deploy React app to frontend EC2 instance
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy React app to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.FRONTEND_EC2_IP }} << 'EOF'
            cd ~/frontend
            git pull origin master  # Pull the latest changes from GitHub
            npm install  # Install dependencies
            npm run build  # Build the React app
            serve -s build -l 80  # Serve the React app on port 80
          EOF

  # Backend job to deploy Node.js + Express app to backend EC2 instance
  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend  # Make sure the frontend is deployed first
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Express app to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.BACKEND_EC2_IP }} << 'EOF'
            cd ~/backend
            git pull origin master  # Pull the latest changes from GitHub
            npm install  # Install dependencies
            npm run build  # Optional: If using build process for the backend (e.g., TypeScript)
            pm2 restart backend || pm2 start server.js --name backend  # Use PM2 to manage the backend process
          EOF

  # Job to check if MongoDB is running on backend EC2
  check-mongo:
    runs-on: ubuntu-latest
    needs: deploy-backend  # Run this after the backend is deployed.
    steps:
      - name: Check MongoDB connection
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.BACKEND_EC2_IP }} << 'EOF'
            # Check if MongoDB is running
            sudo systemctl status mongod
          EOF
