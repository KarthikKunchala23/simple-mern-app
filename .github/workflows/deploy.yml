name: Deploy MERN Stack to EC2

on:
  push:
    branches:
      - master  # Trigger the pipeline when code is pushed to the master branch
  pull_request:
    branches:
      - master  # Trigger the pipeline on PRs to the master branch

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ vars.EC2_SSH_KEY }}  # Using environment-level secret

      - name: Deploy React app to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.FRONTEND_EC2_IP }} << 'EOF'
            cd ~
            echo "Current directory: $(pwd)"
            if [ ! -d "frontend" ]; then
              echo "Cloning the repository..."
              git clone https://github.com/KarthikKunchala23/simple-mern-app.git frontend
            else
              echo "Repository already exists, pulling latest changes..."
              cd frontend
              git pull origin master
            fi
            cd frontend
            # git pull origin master  # Pull the latest changes from master
            npm install  # Install dependencies
            npm run build  # Build the React app
            sudo serve -s build -l 80  # Serve the React app on port 80
          EOF

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ vars.EC2_SSH_KEY }}  # Using environment-level secret

      - name: Deploy Express app to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.BACKEND_EC2_IP }} << 'EOF'
            cd ~
            echo "Current directory: $(pwd)"
            if [ ! -d "backend" ]; then
              echo "Cloning the repository..."
              git clone https://github.com/KarthikKunchala23/simple-mern-app.git backend
            else
              echo "Repository already exists, pulling latest changes..."
              cd backend
              git pull origin master
            fi
            cd backend
            # git pull origin master  # Pull the latest changes from master
            npm install  # Install dependencies
            npm run build  # Optional: If using build process for the backend (e.g., TypeScript)
            pm2 restart backend || pm2 start server.js --name backend
          EOF

  check-mongo:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Check MongoDB connection
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.BACKEND_EC2_IP }} << 'EOF'
            sudo systemctl status mongod
          EOF
